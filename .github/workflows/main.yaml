Public Sub CreateJournalEntries()

    ' 1. Setup Variables and Error Handling
    Dim wbMacro As Workbook
    Dim wbSource As Workbook
    Dim wsSource As Worksheet
    Dim wsTemplate As Worksheet
    Dim wbOutput As Workbook
    Dim wsOutput As Worksheet
    
    Dim lastRowSource As Long
    Dim outputRow As Long
    Dim i As Long
    Dim pairsProcessed As Long
    Dim buySellIndicator As String
    Dim cancelledAccount As String
    Dim rebookedAccount As String
    
    ' Jump to cleanup section if an error occurs
    On Error GoTo ErrorHandler
    
    ' Disable application settings for performance
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

    ' 2. Assign Workbook and Worksheet Objects
    Set wbMacro = ThisWorkbook
    Set wbSource = ActiveWorkbook
    
    ' Make sure the macro isn't running on the macro file itself
    If wbSource.Name = wbMacro.Name Then
        MsgBox "Please activate the source data file and run the macro again." & vbNewLine & _
               "Do not run the macro on the file containing the macro itself.", vbExclamation, "Wrong File Active"
        GoTo CleanUp
    End If
    
    Set wsSource = wbSource.ActiveSheet
    
    ' Get the template sheet
    On Error Resume Next ' Temporarily turn off error checking
    Set wsTemplate = wbMacro.Sheets("JE TEMPLATE")
    On Error GoTo ErrorHandler ' Turn error checking back on
    
    If wsTemplate Is Nothing Then
        MsgBox "Error: A sheet named 'JE TEMPLATE' was not found in the macro workbook.", vbCritical, "Template Not Found"
        GoTo CleanUp
    End If

    ' 3. Create Output Workbook and Copy Headers
    Set wbOutput = Workbooks.Add
    Set wsOutput = wbOutput.Sheets(1)
    wsOutput.Name = "Journal Entries"
    
    ' Copy headers from template
    wsTemplate.Rows(1).Copy wsOutput.Rows(1)
    
    ' 4. Main Processing Loop
    lastRowSource = wsSource.Cells(wsSource.Rows.Count, "A").End(xlUp).Row
    outputRow = 1 ' Start at 1 for the header row
    pairsProcessed = 0
    
    For i = 2 To lastRowSource ' Assume data starts on row 2
        ' Use Trim to handle any leading/trailing spaces in the status column
        If Trim(CStr(wsSource.Cells(i, "A").Value)) = "Cancelled" Then
            
            ' Move to the next output row to write to
            outputRow = outputRow + 1
            
            ' --- NEW LOGIC ---
            ' Get the Buy/Sell indicator and the two account numbers from the pair of rows.
            ' Using UCase and Trim makes the check robust (handles "b", "B", " s ", etc.)
            buySellIndicator = Trim(UCase(CStr(wsSource.Cells(i, "F").Value)))
            cancelledAccount = CStr(wsSource.Cells(i, "E").Value)
            rebookedAccount = CStr(wsSource.Cells(i + 1, "E").Value)
            
            ' Extract values and place them into the output sheet
            With wsOutput.Rows(outputRow)
                ' Column A: sec_type
                .Cells(1).Value = "Q"
                
                ' Column B: sec_no (CUSIP from Column N)
                .Cells(2).Value = wsSource.Cells(i, "N").Value
                
                ' --- UPDATED SECTION for Debit/Credit Account Placement ---
                If buySellIndicator = "B" Then
                    ' Logic for a BUY
                    .Cells(3).Value = rebookedAccount  ' Credit Account = Rebooked
                    .Cells(8).Value = cancelledAccount ' Debit Account  = Cancelled
                ElseIf buySellIndicator = "S" Then
                    ' Logic for a SELL
                    .Cells(3).Value = cancelledAccount ' Credit Account = Cancelled
                    .Cells(8).Value = rebookedAccount  ' Debit Account  = Rebooked
                Else
                    ' Handle cases where column F is not B or S
                    .Cells(3).Value = "ERROR: B/S NOT FOUND"
                    .Cells(8).Value = "ERROR: B/S NOT FOUND"
                End If
                ' --- END OF UPDATED SECTION ---
                
                ' Column D: credit_quantity (Quantity from Column G)
                .Cells(4).Value = wsSource.Cells(i, "G").Value
                
                ' Column E: credit_amount (Absolute value of Net Money from Column H)
                .Cells(5).Value = Abs(wsSource.Cells(i, "H").Value)
                
                ' Column F: credit_explanation_1
                .Cells(6).Value = "Rebill"
                
                ' Column G: credit_explanation_2 (Leave blank)
                
                ' Column I: debit_quantity (Quantity from Column G)
                .Cells(9).Value = wsSource.Cells(i, "G").Value
                
                ' Column J: debit_amount (Absolute value of Net Money from Column H)
                .Cells(10).Value = Abs(wsSource.Cells(i, "H").Value)
                
                ' Column K: debit_explanation_1
                .Cells(11).Value = "Rebill"
                
                ' Column L: asof_date (Process Date from Column B)
                .Cells(12).Value = wsSource.Cells(i, "B").Value
                .Cells(12).NumberFormat = "dd/mm/yy" ' Ensure the date format is correct
            End With
            
            ' Increment the count of processed pairs
            pairsProcessed = pairsProcessed + 1
            
            ' Increment counter to skip the rebill row in the next loop iteration
            i = i + 1
        End If
    Next i
    
    ' 5. Finalization
    wsOutput.Columns.AutoFit
    
    MsgBox pairsProcessed & " journal entry pairs were processed successfully.", vbInformation, "Process Complete"
    
' 6. CleanUp
CleanUp:
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Set wbMacro = Nothing
    Set wbSource = Nothing
    Set wsSource = Nothing
    Set wsTemplate = Nothing
    Set wbOutput = Nothing
    Set wsOutput = Nothing
    Exit Sub

' 7. Error Handler
ErrorHandler:
    MsgBox "An error occurred." & vbNewLine & "Error Number: " & Err.Number & vbNewLine & "Description: " & Err.Description, vbCritical, "Macro Error"
    GoTo CleanUp

End Sub
