Sub ParseFixMessages_TransposedView()
    ' --- SETTINGS ---
    ' Set the character that separates the tag=value pairs in your messages.
    ' Your example used a semicolon ";". Common alternatives are "|" or Chr(1).
    Const DELIMITER As String = ";"
    ' --- END SETTINGS ---

    Dim wsInput As Worksheet
    Dim wsOutput As Worksheet
    Dim tagNames As Object
    Dim lastInputRow As Long
    Dim outputRow As Long
    Dim i As Long

    ' Check if the input sheet exists
    On Error Resume Next
    Set wsInput = ThisWorkbook.Sheets("Sheet1")
    On Error GoTo 0
    If wsInput Is Nothing Then
        MsgBox "Error: Worksheet named 'Sheet1' was not found.", vbCritical
        Exit Sub
    End If

    ' Initialize the dictionary of FIX Tag names
    Set tagNames = InitializeTagNames()

    ' --- Prepare the Output Sheet ---
    ' Delete the old output sheet if it exists
    Application.DisplayAlerts = False
    On Error Resume Next
    ThisWorkbook.Sheets("FIX_Output").Delete
    On Error GoTo 0
    Application.DisplayAlerts = True
    
    ' Add a new, clean output sheet
    Set wsOutput = ThisWorkbook.Sheets.Add(After:=wsInput)
    wsOutput.Name = "FIX_Output"

    ' --- Main Processing Loop ---
    lastInputRow = wsInput.Cells(wsInput.Rows.Count, "A").End(xlUp).Row
    outputRow = 1 ' Start writing on the first row of the output sheet

    For i = 1 To lastInputRow
        Dim fixMessage As String
        fixMessage = Trim(wsInput.Cells(i, 1).Value)

        If fixMessage <> "" Then
            Dim pairs() As String
            Dim tagVal() As String
            Dim j As Integer
            Dim outputCol As Integer
            
            pairs = Split(fixMessage, DELIMITER)
            outputCol = 1

            ' Loop through each tag=value pair in the message
            For j = 0 To UBound(pairs)
                If InStr(pairs(j), "=") > 0 Then
                    tagVal = Split(pairs(j), "=", 2)
                    Dim currentTag As String
                    Dim currentValue As String
                    currentTag = tagVal(0)
                    currentValue = tagVal(1)

                    ' Write the Tag, Value, and Name to the output sheet
                    wsOutput.Cells(outputRow, outputCol).Value = currentTag
                    wsOutput.Cells(outputRow + 1, outputCol).Value = currentValue
                    
                    If tagNames.Exists(currentTag) Then
                        wsOutput.Cells(outputRow + 2, outputCol).Value = tagNames(currentTag)
                    Else
                        wsOutput.Cells(outputRow + 2, outputCol).Value = "Unknown Tag"
                    End If
                    
                    outputCol = outputCol + 1 ' Move to the next column
                End If
            Next j

            ' Format the block for the current message
            wsOutput.Rows(outputRow).Font.Bold = True ' Bold the Tag numbers
            wsOutput.Rows(outputRow + 2).Font.Italic = True ' Italicize the Tag Names
            wsOutput.Rows(outputRow + 2).Font.Color = RGB(100, 100, 100) ' Gray color for names
            
            ' Move the output row cursor down for the next message, leaving a blank row
            outputRow = outputRow + 4
        End If
    Next i

    ' --- Final Formatting ---
    wsOutput.Columns.AutoFit
    MsgBox "Processing complete! Your parsed FIX messages are in the 'FIX_Output' sheet.", vbInformation
End Sub


Private Function InitializeTagNames() As Object
    ' Creates and populates a dictionary of common FIX tags and their names.
    ' ** YOU CAN ADD MORE TAGS AND DESCRIPTIONS HERE **
    ' Syntax: .Add "TAG_NUMBER", "TAG_NAME"
    
    Dim dict As Object
    Set dict = CreateObject("Scripting.Dictionary")

    ' --- Standard Header Tags ---
    dict.Add "8", "BeginString"
    dict.Add "9", "BodyLength"
    dict.Add "35", "MsgType"
    dict.Add "49", "SenderCompID"
    dict.Add "56", "TargetCompID"
    dict.Add "34", "MsgSeqNum"
    dict.Add "52", "SendingTime"
    dict.Add "50", "SenderSubID"
    dict.Add "57", "TargetSubID"
    dict.Add "115", "OnBehalfOfCompID"
    dict.Add "116", "OnBehalfOfSubID"
    
    ' --- Standard Trailer Tags ---
    dict.Add "10", "CheckSum"
    
    ' --- Common Message Body Tags from your Document ---
    dict.Add "11", "ClOrdID" ' Although not in ORF spec, it's a common tag
    dict.Add "31", "LastPx"
    dict.Add "32", "LastQty"
    dict.Add "54", "Side"
    dict.Add "55", "Symbol"
    dict.Add "60", "TransactTime"
    dict.Add "75", "TradeDate"
    dict.Add "150", "ExecType"
    dict.Add "423", "PriceType"
    dict.Add "453", "NoPartyIDs"
    dict.Add "448", "PartyID"
    dict.Add "447", "PartyIDSource"
    dict.Add "452", "PartyRole"
    dict.Add "571", "TradeReportID"
    dict.Add "572", "TradeReportRefID"
    dict.Add "856", "TradeReportType"
    dict.Add "487", "TradeReportTransType"
    dict.Add "1003", "TradeID"
    dict.Add "1041", "FirmTradeID"
    dict.Add "1042", "SecondaryFirmTradeID"
    dict.Add "1126", "OrigTradeID"
    
    ' --- FINRA Custom Tags from your Document ---
    dict.Add "22001", "TradeModifier1"
    dict.Add "22003", "TradeModifier3"
    dict.Add "22004", "TradeModifier4"
    dict.Add "22005", "SpecialProcessingFlag"
    dict.Add "22011", "ControlDate"
    dict.Add "22012", "OrigControlDate"
    dict.Add "22013", "LockedInIndicator"
    dict.Add "22024", "ShortSaleIndicator"
    dict.Add "22029", "ReferenceReportingFacility"
    dict.Add "22030", "ReportingObligation"
    
    ' ** ADD MORE TAGS HERE **
    
    Set InitializeTagNames = dict
End Function
