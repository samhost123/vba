Sub FilterSymbolsNettingToZero_Final_V2()

    ' --- MACRO START ---
    ' Purpose: Filters the ACTIVE sheet ("Missing Report") to only include rows for symbols
    ' where the total sum of "NET QTY DIFF" for that symbol is zero.
    
    ' --- Speed Optimization ---
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.DisplayAlerts = False
    
    ' --- Variable Declaration ---
    Dim wb As Workbook
    Dim wsReport As Worksheet
    Dim wsPivot As Worksheet
    Dim wsSymbols As Worksheet
    Dim pvtCache As PivotCache
    Dim pvt As PivotTable
    Dim lastRowReport As Long
    Dim symbolKeepRange As Range
    Dim finalSum As Double

    ' --- Use the ACTIVE WORKBOOK, not the one containing the code ---
    Set wb = ActiveWorkbook

    ' --- Error Handling can be re-enabled once the macro is confirmed to work ---
    ' On Error GoTo ErrorHandler

    ' --- Setup Worksheets in the Active Workbook ---
    Set wsReport = wb.Sheets("Missing Report")
    
    ' Create temporary sheets in the active data file
    Set wsPivot = wb.Sheets.Add
    Set wsSymbols = wb.Sheets.Add

    ' --- Create Pivot Table to Find Symbols That Sum to Zero ---
    lastRowReport = wsReport.Cells(wsReport.Rows.Count, "L").End(xlUp).Row
    Set sourceDataRange = wsReport.Range("A1:T" & lastRowReport)
    
    Set pvtCache = wb.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=sourceDataRange)
    
    Set pvt = pvtCache.CreatePivotTable(TableDestination:=wsPivot.Range("A3"), TableName:="SymbolSumPivot")
    
    With pvt.PivotFields("SYMBOL")
        .Orientation = xlRowField
        .Position = 1
    End With
    With pvt.PivotFields("NET QTY DIFF")
        .Orientation = xlDataField
        .Function = xlSum
        .Name = "Sum of NET QTY DIFF"
    End With

    ' --- Isolate Symbols with a Zero Sum ---
    wsPivot.Activate
    pvt.TableRange1.Copy
    wsSymbols.Range("A1").PasteSpecial Paste:=xlPasteValues
    
    wsSymbols.Range("A:B").AutoFilter Field:=2, Criteria1:="0"
    
    ' Check if any symbols to keep were found
    On Error Resume Next
    Set symbolKeepRange = wsSymbols.Range("A2:A" & wsSymbols.Rows.Count).SpecialCells(xlCellTypeVisible)
    On Error GoTo 0 ' Resets error handling
    
    If symbolKeepRange Is Nothing Then
        MsgBox "No symbols were found with a 'NET QTY DIFF' sum of zero. No changes were made to the report.", vbInformation
        GoTo Cleanup
    End If
    
    ' --- Filter the Main "Missing Report" Sheet ---
    wsReport.Activate
    
    ' >>> THIS IS THE CORRECTED LINE <<<
    ' Use a more robust MATCH formula that avoids the formula character limit
    With wsReport.Range("AF2:AF" & lastRowReport)
        .Formula = "=IF(ISERROR(MATCH(L2,'" & wsSymbols.Name & "'!A:A,0)),0,1)"
        .Value = .Value ' Convert formulas to values for speed
    End With
    ' >>> END OF CORRECTION <<<
    
    ' Filter to show only rows that should be deleted (where helper column is 0)
    wsReport.Range("A1:AF" & lastRowReport).AutoFilter Field:=32, Criteria1:="0"
    
    ' Delete the visible rows if any are found
    If wsReport.AutoFilter.Range.Columns(1).SpecialCells(xlCellTypeVisible).Count > 1 Then
        wsReport.Range("A2:A" & lastRowReport).SpecialCells(xlCellTypeVisible).EntireRow.Delete
    End If
    
    ' Clean up the filter and helper column
    If wsReport.AutoFilterMode Then wsReport.AutoFilterMode = False
    wsReport.Columns("AF").ClearContents
    
    ' --- Final Check ---
    finalSum = Application.WorksheetFunction.Sum(wsReport.Range("T:T"))
    MsgBox "Processing complete." & vbCrLf & "The final sum of 'NET QTY DIFF' is: " & finalSum, vbInformation

Cleanup:
    Application.DisplayAlerts = False
    If Not wsPivot Is Nothing Then wsPivot.Delete
    If Not wsSymbols Is Nothing Then wsSymbols.Delete
    
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.DisplayAlerts = True
    Exit Sub

ErrorHandler:
    MsgBox "An error occurred:" & vbCrLf & vbCrLf & _
           "Error Number: " & Err.Number & vbCrLf & _
           "Description: " & Err.Description, vbCritical
    GoTo Cleanup

End Sub
